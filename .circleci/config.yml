version: 2.0

jobs:

  # Common

  checkout_code:
    docker:
      - image: circleci/node:8
      - image: circleci/node:8-browsers
    working_directory: ~/pix
    steps:
      - checkout
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: pix-{{ checksum ".circle-sha" }}-v9
          paths:
            - ~/pix

  # Server side

  install_server_dependencies:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/api
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - server-dependencies-{{ checksum "package.json" }}-v9
      - run: npm install
      - save_cache:
          key: server-dependencies-{{ checksum "package.json" }}-v9
          paths:
            - ~/pix/api/node_modules
            - ~/pix/.npm

  test_server:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/api
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - server-dependencies-{{ checksum "package.json" }}-v9
      - run: npm test

  deploy_server:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/api
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - server-dependencies-{{ checksum "package.json" }}-v9
      - run: |
          npm run deploy:integration

  # Client side

  install_client_dependencies:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
      - run: npm install
      - save_cache:
          key: client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
          paths:
            - ~/pix/live/node_modules
            - ~/pix/live/bower_components
            - ~/.npm
            - ~/.cache/bower

  build_client:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
      - run: ./node_modules/.bin/ember build
      - save_cache:
          key: client_app-{{ checksum ".circle-sha" }}-v9
          paths:
            - dist

  test_client_1:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
      - restore_cache:
          keys:
            - client_app-{{ checksum ".circle-sha" }}-v9
      - run: ./node_modules/.bin/ember exam --path dist --split=3 --partition=1

  test_client_2:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
      - restore_cache:
          keys:
            - client_app-{{ checksum ".circle-sha" }}-v9
      - run: ./node_modules/.bin/ember exam --path dist --split=3 --partition=2

  test_client_3:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}-v9
      - restore_cache:
          keys:
            - client_app-{{ checksum ".circle-sha" }}-v9
      - run: ./node_modules/.bin/ember exam --path dist --split=3 --partition=3

  deploy_client:
    docker:
      - image: circleci/node:8
    working_directory: ~/pix/live
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - pix-{{ checksum ".circle-sha" }}-v9
      - restore_cache:
          keys:
            - client-dependencies-{{ checksum "package.json" }}-{{ checksum "bower.json" }}
      - restore_cache:
          keys:
            - client_app-{{ checksum ".circle-sha" }}-v9
      # cf. https://circleci.com/docs/2.0/gh-bb-integration/#adding-readwrite-deployment-keys-to-github-or-bitbucket
      - add-ssh-keys:
         fingerprints:
           - "c3:0d:1b:26:62:f1:89:98:d8:8c:f2:6c:b1:25:7b:6b"
      - run: |
          ssh-keyscan github.com > ~/.ssh/known_hosts
          git config user.email "jbuget@gmail.com"
          git config user.name "JÃ©rÃ©my Buget"
          npm run deploy:integration

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      # Common
      - checkout_code

      # Server side
      - install_server_dependencies:
          requires:
            - checkout_code
      - test_server:
          requires:
            - install_server_dependencies
      - deploy_server:
          requires:
            - test_server
          filters:
            branches:
              ignore:
                - master
                - dev
                - gh-pages

      # Client side
      - install_client_dependencies:
          requires:
            - checkout_code
      - build_client:
          requires:
            - install_client_dependencies
      - test_client_1:
          requires:
            - build_client
      - test_client_2:
          requires:
            - build_client
      - test_client_3:
          requires:
            - build_client
      - deploy_client:
          requires:
            - test_client_1
            - test_client_2
            - test_client_3
          filters:
            branches:
              ignore:
                - master
                - dev
                - gh-pages
